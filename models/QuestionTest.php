<?php
namespace app\models;

class QuestionTest extends BaseQuestionTest
{
    public static function findNextQuestion($activeTest)
    {
        $model = self::find()->where(['sub_test_class_id' => $activeTest->sub_test_class_id])->andWhere(['>', 'id', $activeTest->current_test_id])->one();

        return $model;
    }

    public static function activeFind($subTestClassId = null)
    {
        if (is_null($subTestClassId))
            return self::find();
        else {
            return self::find()->where([
                'sub_test_class_id' => $subTestClassId
            ]);
        }
    }

    public function getCorrectAnswer()
    {
        $i = 0;

        foreach ($this->questionAnswers as $key => $val) {
            if ($val->is_correct == QuestionAnswer::IS_CORRECT)
                return $val->id;
            
            $i++;
        }
    }

    public function getAnswerList()
    {
        $labels = ['A', 'B', 'C', 'D', 'E'];

        if ($this->isNewRecord)
            return $labels;
        else {
            $data = [];

            foreach ($this->questionAnswers as $key => $val) {
                $data[$val->id] = $labels[$key];
            }

            return $data;
        }
    }

    public function afterSave($insert, $changedAttributes)
    {
        if ($insert) {
            for ($i = 0; $i < 5; $i++) {
                $answer = new QuestionAnswer();
                $answer->question_test_id = $this->id;
                $answer->answer = $this->answers[$i];

                if ($this->subTestClass->testClass->type != TestClass::PERSONALITY_TEST)
                    $answer->is_correct = $this->is_correct_answer == $i ? QuestionAnswer::IS_CORRECT : QuestionAnswer::IS_INCORRECT;
                else
                    $answer->is_correct = $this->is_correct_answer[$i];

                $answer->save();
            }
        } else {
            $i = 0;
            foreach ($this->questionAnswers as $key => $val) {
                $val->answer = $this->answers[$key];
                //$val->is_correct = $this->is_correct_answer == $val->id ? QuestionAnswer::IS_CORRECT : QuestionAnswer::IS_INCORRECT;
                
                if ($this->subTestClass->testClass->type != TestClass::PERSONALITY_TEST)
                    $val->is_correct = $this->is_correct_answer == $val->id ? QuestionAnswer::IS_CORRECT : QuestionAnswer::IS_INCORRECT;
                else
                    $val->is_correct = $this->is_correct_answer[$i];

                $val->save();
                $i++;
            }
        }
    }

    public static function getSymbolList()
    {
        return [
            'page-1' => [
                '&Aacute;', '&aacute;', '&Agrave;', '&agrave;', '&Acirc;', '&acirc;', '&Auml;', '&auml;', '&Atilde;', '&atilde;', '&Aring;', '&aring;', '&aelig;', '&Ccedil;',
                '&ccedil;', '&eth;', '&Eacute;', '&eacute;', '&Egrave;', '&egrave;', '&Ecirc;', '&ecirc;', '&Euml;', '&euml;', '&Iacute;', '&iacute;', '&Igrave;', '&igrave;',
                '&Icirc;', '&icirc;', '&Iuml;', '&iuml;', '&Ntilde;', '&ntilde;', '&Oacute;', '&oacute;', '&Ograve;', '&ograve;', '&Ocirc;', '&ocirc;', '&Ouml;', '&ouml;',
                '&Otilde;', '&otilde;', '&#216;', '&#248;', '&#223;', '&#254;', '&#218;', '&#250;', '&#217;', '&#249;', '&#219;', '&#251;', '&#220;', '&#252;', '&#221;',
                '&#253;', '&#255;', '&#8448;', '&#8449;', '&#8450;', '&#8451;', '&#8452;', '&#8453;', '&#8454;', '&#8455;', '&#8456;', '&#8457;', '&#8458;', '&#8459;',
                '&#8460;', '&#8461;', '&#8462;', '&#8463;', '&#8464;', '&#8465;', '&#8466;', '&#8467;', '&#8468;', '&#8469;', '&#8470;', '&#8471;', '&#8472;', '&#8473;',
                '&#8474;', '&#8475;', '&#8476;', '&#8477;', '&#8478;', '&#8479;', '&#8480;', '&#8481;', '&#8482;', '&#8483;', '&#8484;', '&#8485;', '&#8486;', '&#8487;',
                '&#8488;', '&#8489;', '&#8490;', '&#8491;', '&#8492;', '&#8493;', '&#8494;', '&#8495;', '&#8496;', '&#8497;', '&#8498;', '&#8499;', '&#8500;', '&#8501;',
                '&#8502;', '&#8503;', '&#8504;', '&#8505;', '&#8506;', '&#8507;'
            ],
            'page-2' => [
                '&#8508;', '&#8509;', '&#8510;', '&#8511;', '&#8512;', '&#8513;', '&#8514;', '&#8515;', '&#8516;', '&#8517;', '&#8518;', '&#8519;', '&#8520;', '&#8521;',
                '&#8522;', '&#8523;', '&#8524;', '&#8525;', '&#8526;', '&#8527;', '&#8544;', '&#8545;', '&#8546;', '&#8547;', '&#8548;', '&#8549;', '&#8550;', '&#8551;',
                '&#8552;', '&#8553;', '&#8554;', '&#8555;', '&#8556;', '&#8557;', '&#8558;', '&#8559;', '&#8560;', '&#8561;', '&#8562;', '&#8563;', '&#8564;', '&#8565;',
                '&#8566;', '&#8567;', '&#8568;', '&#8569;', '&#8570;', '&#8571;', '&#8572;', '&#8573;', '&#8574;', '&#8575;', '&#8576;', '&#8577;', '&#8578;', '&#8579;',
                '&#8581;', '&#8582;', '&#188;', '&#189;', '&#190;', '&#8528;', '&#8529;', '&#8530;', '&#8531;', '&#8532;', '&#8533;', '&#8534;', '&#8535;', '&#8536;',
                '&#8537;', '&#8538;', '&#8539;', '&#8540;', '&#8541;', '&#8542;', '&#8585;', '&#8580;', '&#8543;', '&#8704;', '&#8705;', '&#8706;', '&#8707;', '&#8708;',
                '&#8709;', '&#8710;', '&#8711;', '&#8712;', '&#8713;', '&#8714;', '&#8715;', '&#8716;', '&#8717;', '&#8718;', '&#8719;', '&#8720;', '&#8721;', '&#8722;',
                '&#8723;', '&#8724;', '&#8725;', '&#8726;', '&#8727;', '&#8728;', '&#8729;', '&#8730;', '&#8731;', '&#8732;', '&#8733;', '&#8734;', '&#8735;', '&#8736;',
                '&#8737;', '&#8738;', '&#8739;', '&#8740;', '&#8741;', '&#8742;',  '&#8743;', 
            ],
            'page-3' => [
                '&#8744;', '&#8745;', '&#8746;', '&#8747;', '&#8748;', '&#8749;', '&#8750;', '&#8751;', '&#8752;', '&#8753;', '&#8754;', '&#8755;', '&#8756;', '&#8757;',
                '&#8758;', '&#8759;', '&#8760;', '&#8761;', '&#8762;', '&#8763;', '&#8764;', '&#8765;', '&#8766;', '&#8767;', '&#8768;', '&#8769;', '&#8770;', '&#8771;',
                '&#8772;', '&#8773;', '&#8774;', '&#8775;', '&#8776;', '&#8777;', '&#8778;', '&#8779;', '&#8780;', '&#8781;', '&#8782;', '&#8783;', '&#8784;', '&#8785;',
                '&#8786;', '&#8787;', '&#8788;', '&#8789;', '&#8790;', '&#8791;', '&#8792;', '&#8793;', '&#8794;', '&#8795;', '&#8796;', '&#8797;', '&#8798;', '&#8799;',
                '&#8800;', '&#8801;', '&#8802;', '&#8803;', '&#8804;', '&#8805;', '&#8806;', '&#8807;', '&#8808;', '&#8809;', '&#8810;', '&#8811;', '&#8812;', '&#8813;',
                '&#8814;', '&#8815;', '&#8816;', '&#8817;', '&#8818;', '&#8819;', '&#8820;', '&#8821;', '&#8822;', '&#8823;', '&#8824;', '&#8825;', '&#8826;', '&#8827;',
                '&#8828;', '&#8829;', '&#8830;', '&#8831;', '&#8832;', '&#8833;', '&#8834;', '&#8835;', '&#8836;', '&#8837;', '&#8838;', '&#8839;', '&#8840;', '&#8841;',
                '&#8842;', '&#8843;', '&#8844;', '&#8845;', '&#8846;', '&#8847;', '&#8848;', '&#8849;', '&#8850;', '&#8851;', '&#8852;', '&#8853;', '&#8854;', '&#8855;',
                '&#8856;', '&#8857;', '&#8858;', '&#8859;', '&#8860;', '&#8861;', '&#8862;'
            ],
            'page-4' => [
                '&#8863;', '&#8864;', '&#8865;', '&#8866;', '&#8867;', '&#8868;', '&#8869;', '&#8870;', '&#8871;', '&#8872;', '&#8873;', '&#8874;', '&#8875;', '&#8876;',
                '&#8877;', '&#8878;', '&#8879;', '&#8880;', '&#8881;', '&#8882;', '&#8883;', '&#8884;', '&#8885;', '&#8886;', '&#8887;', '&#8888;', '&#8889;', '&#8890;',
                '&#8891;', '&#8892;', '&#8893;', '&#8894;', '&#8895;', '&#8896;', '&#8897;', '&#8898;', '&#8899;', '&#8900;', '&#8901;', '&#8902;', '&#8903;', '&#8904;',
                '&#8905;', '&#8906;', '&#8907;', '&#8908;', '&#8909;', '&#8910;', '&#8911;', '&#8912;', '&#8913;', '&#8914;', '&#8915;', '&#8916;', '&#8917;', '&#8918;',
                '&#8919;', '&#8920;', '&#8921;', '&#8922;', '&#8923;', '&#8924;', '&#8925;', '&#8926;', '&#8927;', '&#8928;', '&#8929;', '&#8930;', '&#8931;', '&#8932;',
                '&#8933;', '&#8934;', '&#8935;', '&#8936;', '&#8937;', '&#8938;', '&#8939;', '&#8940;', '&#8941;', '&#8942;', '&#8943;', '&#8944;', '&#8945;', '&#8946;',
                '&#8947;', '&#8948;', '&#8949;', '&#8950;', '&#8951;', '&#8952;', '&#8953;', '&#8954;', '&#8955;', '&#8956;', '&#8957;', '&#8958;', '&#8959;', '&#8352;',
                '&#8352;', '&#8353;', '&#8354;', '&#8355;', '&#8356;', '&#8357;', '&#8358;', '&#8359;', '&#8360;', '&#8361;', '&#8362;', '&#8363;', '&#8364;', '&#8365;',
                '&#8366;', '&#8367;', '&#8368;', '&#8369;', '&#8370;', '&#8371;', '&#8372;'
            ],
            'page-5' => [
                '&#8373;', '&#8374;', '&#8375;', '&#8376;', '&#8377;', '&#8592;', '&#8594;', '&#8593;', '&#8595;', '&#8596;', '&#8597;', '&#8598;', '&#8599;', '&#8600;',
                '&#8601;', '&#8602;', '&#8603;', '&#8604;', '&#8605;', '&#8606;', '&#8607;', '&#8608;', '&#8609;', '&#8610;', '&#8611;', '&#8612;', '&#8613;', '&#8614;',
                '&#8615;', '&#8616;', '&#8617;', '&#8618;', '&#8619;', '&#8620;', '&#8621;', '&#8622;', '&#8623;', '&#8624;', '&#8625;', '&#8626;', '&#8627;', '&#8628;',
                '&#8629;', '&#8630;', '&#8631;', '&#8632;', '&#8633;', '&#8634;', '&#8635;', '&#8636;', '&#8637;', '&#8638;', '&#8639;', '&#8640;', '&#8641;', '&#8642;',
                '&#8643;', '&#8644;', '&#8645;', '&#8646;', '&#8647;', '&#8648;', '&#8649;', '&#8650;', '&#8651;', '&#8652;', '&#8653;', '&#8654;', '&#8655;', '&#8656;',
                '&#8657;', '&#8658;', '&#8659;', '&#8660;', '&#8661;', '&#8662;', '&#8663;', '&#8664;', '&#8665;', '&#8666;', '&#8667;', '&#8668;', '&#8669;', '&#8670;',
                '&#8671;', '&#8672;', '&#8673;', '&#8674;', '&#8675;', '&#8676;', '&#8677;', '&#8677;', '&#8678;', '&#8679;', '&#8680;', '&#8681;', '&#8682;', '&#8683;',
                '&#8684;', '&#8685;', '&#8686;', '&#8687;', '&#8688;', '&#8689;', '&#8690;', '&#8691;', '&#8692;', '&#8693;', '&#8694;', '&#8695;', '&#8696;', '&#8697;',
                '&#8698;', '&#8699;', '&#8700;', '&#8701;', '&#8702;', '&#8703;', '&#10224;'
            ],
            'page-6' => [
                '&#10225;', '&#10226;', '&#10227;', '&#10228;', '&#10229;', '&#10230;', '&#10231;', '&#10232;', '&#10233;', '&#10234;', '&#10235;', '&#10236;', '&#10237;',
                '&#10238;', '&#10239;', '&#10496;', '&#10497;', '&#10498;', '&#10499;', '&#10500;', '&#10501;', '&#10502;', '&#10503;', '&#10504;', '&#10505;', '&#10506;',
                '&#10507;', '&#10508;', '&#10509;', '&#10510;', '&#10511;', '&#10512;', '&#10513;', '&#10514;', '&#10515;', '&#10516;', '&#10517;', '&#10518;', '&#10519;',
                '&#10520;', '&#10521;', '&#10522;', '&#10523;', '&#10524;', '&#10525;', '&#10526;', '&#10527;', '&#10528;', '&#10529;', '&#10530;', '&#10531;', '&#10532;',
                '&#10533;', '&#10534;', '&#10535;', '&#10536;', '&#10537;', '&#10538;', '&#10539;', '&#10540;', '&#10541;', '&#10542;', '&#10543;', '&#10544;', '&#10545;',
                '&#10546;', '&#10547;', '&#10548;', '&#10549;', '&#10550;', '&#10551;', '&#10552;', '&#10553;', '&#10554;', '&#10555;', '&#10556;', '&#10557;', '&#10558;',
                '&#10559;', '&#10560;', '&#10561;', '&#10562;', '&#10563;', '&#10564;', '&#10565;', '&#10566;', '&#10567;', '&#10568;', '&#10569;', '&#10570;', '&#10571;',
                '&#10572;', '&#10573;', '&#10574;', '&#10575;', '&#10576;', '&#10577;', '&#10578;', '&#10579;', '&#10580;', '&#10581;', '&#10582;', '&#10583;', '&#10584;',
                '&#10585;', '&#10586;', '&#10587;', '&#10588;', '&#10589;', '&#10590;', '&#10591;', '&#10592;', '&#10593;', '&#10594;', '&#10595;', '&#10596;', '&#10597;', 
                '&#10598;', '&#10599;'
            ]
        ];
    }
}